// <auto-generated />
using System;
using Cocktails;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Cocktails.Migrations
{
    [DbContext(typeof(DrinksContext))]
    [Migration("20210824103852_changes")]
    partial class changes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Cocktails.Accessory", b =>
                {
                    b.Property<int>("AccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DrinkId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("AccessoryId");

                    b.HasIndex("DrinkId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("Cocktails.Alcohol", b =>
                {
                    b.Property<int>("AlcoholId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("AlcoholId");

                    b.ToTable("Alcohols");
                });

            modelBuilder.Entity("Cocktails.AlcoholAmount", b =>
                {
                    b.Property<int>("AlcoholAmountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AlcoholId")
                        .HasColumnType("integer");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int?>("DrinkId")
                        .HasColumnType("integer");

                    b.Property<string>("MeasureType")
                        .HasColumnType("text");

                    b.HasKey("AlcoholAmountId");

                    b.HasIndex("AlcoholId");

                    b.HasIndex("DrinkId");

                    b.ToTable("AlcoholAmounts");
                });

            modelBuilder.Entity("Cocktails.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DrinkId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("Cocktails.Mixer", b =>
                {
                    b.Property<int>("MixerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("MixerId");

                    b.ToTable("Mixers");
                });

            modelBuilder.Entity("Cocktails.MixerAmount", b =>
                {
                    b.Property<int>("MixerAmountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int?>("DrinkId")
                        .HasColumnType("integer");

                    b.Property<string>("MeasureType")
                        .HasColumnType("text");

                    b.Property<int?>("MixerId")
                        .HasColumnType("integer");

                    b.HasKey("MixerAmountId");

                    b.HasIndex("DrinkId");

                    b.HasIndex("MixerId");

                    b.ToTable("MixerAmounts");
                });

            modelBuilder.Entity("Cocktails.Accessory", b =>
                {
                    b.HasOne("Cocktails.Drink", null)
                        .WithMany("Accessories")
                        .HasForeignKey("DrinkId");
                });

            modelBuilder.Entity("Cocktails.AlcoholAmount", b =>
                {
                    b.HasOne("Cocktails.Alcohol", "Alcohol")
                        .WithMany()
                        .HasForeignKey("AlcoholId");

                    b.HasOne("Cocktails.Drink", null)
                        .WithMany("AlcoholAmounts")
                        .HasForeignKey("DrinkId");

                    b.Navigation("Alcohol");
                });

            modelBuilder.Entity("Cocktails.MixerAmount", b =>
                {
                    b.HasOne("Cocktails.Drink", null)
                        .WithMany("MixerAmounts")
                        .HasForeignKey("DrinkId");

                    b.HasOne("Cocktails.Mixer", "Mixer")
                        .WithMany()
                        .HasForeignKey("MixerId");

                    b.Navigation("Mixer");
                });

            modelBuilder.Entity("Cocktails.Drink", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("AlcoholAmounts");

                    b.Navigation("MixerAmounts");
                });
#pragma warning restore 612, 618
        }
    }
}
